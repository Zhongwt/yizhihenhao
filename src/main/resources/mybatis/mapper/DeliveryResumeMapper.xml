<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzhh.backstage.api.dao.mapper.DeliveryResumeMapper">
  <resultMap id="BaseResultMap" type="com.yzhh.backstage.api.entity.DeliveryResume">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="last_access" jdbcType="BIGINT" property="lastAccess" />
    <result column="resume_id" jdbcType="BIGINT" property="resumeId" />
    <result column="position_id" jdbcType="BIGINT" property="positionId" />
    <result column="delivery_time" jdbcType="BIGINT" property="deliveryTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="money" jdbcType="DOUBLE" property="money" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, last_access, resume_id, position_id, delivery_time, status,money
  </sql>
  <select id="selectByExample" parameterType="com.yzhh.backstage.api.entity.DeliveryResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from delivery_resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from delivery_resume
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from delivery_resume
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yzhh.backstage.api.entity.DeliveryResumeExample">
    delete from delivery_resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yzhh.backstage.api.entity.DeliveryResume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into delivery_resume (last_access, resume_id, position_id, 
      delivery_time, status,money)
    values (#{lastAccess,jdbcType=BIGINT}, #{resumeId,jdbcType=BIGINT}, #{positionId,jdbcType=BIGINT}, 
      #{deliveryTime,jdbcType=BIGINT}, #{status,jdbcType=INTEGER},#{money,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.yzhh.backstage.api.entity.DeliveryResume">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into delivery_resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        last_access,
      </if>
      <if test="resumeId != null">
        resume_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="money != null">
        money,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="resumeId != null">
        #{resumeId,jdbcType=BIGINT},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=BIGINT},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yzhh.backstage.api.entity.DeliveryResumeExample" resultType="java.lang.Long">
    select count(*) from delivery_resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update delivery_resume
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.lastAccess != null">
        last_access = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.resumeId != null">
        resume_id = #{record.resumeId,jdbcType=BIGINT},
      </if>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=BIGINT},
      </if>
      <if test="record.deliveryTime != null">
        delivery_time = #{record.deliveryTime,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update delivery_resume
    set id = #{record.id,jdbcType=BIGINT},
      last_access = #{record.lastAccess,jdbcType=BIGINT},
      resume_id = #{record.resumeId,jdbcType=BIGINT},
      position_id = #{record.positionId,jdbcType=BIGINT},
      delivery_time = #{record.deliveryTime,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      money = #{record.money,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yzhh.backstage.api.entity.DeliveryResume">
    update delivery_resume
    <set>
      <if test="lastAccess != null">
        last_access = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="resumeId != null">
        resume_id = #{resumeId,jdbcType=BIGINT},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=BIGINT},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yzhh.backstage.api.entity.DeliveryResume">
    update delivery_resume
    set last_access = #{lastAccess,jdbcType=BIGINT},
      resume_id = #{resumeId,jdbcType=BIGINT},
      position_id = #{positionId,jdbcType=BIGINT},
      delivery_time = #{deliveryTime,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      money = #{money,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>