<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzhh.backstage.api.dao.mapper.EducationalBackgroundMapper">
  <resultMap id="BaseResultMap" type="com.yzhh.backstage.api.entity.EducationalBackground">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="last_access" jdbcType="BIGINT" property="lastAccess" />
    <result column="resume_id" jdbcType="BIGINT" property="resumeId" />
    <result column="start_time" jdbcType="BIGINT" property="startTime" />
    <result column="end_time" jdbcType="BIGINT" property="endTime" />
    <result column="eduation" jdbcType="VARCHAR" property="eduation" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="major_type" jdbcType="VARCHAR" property="majorType" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="major_courses" jdbcType="VARCHAR" property="majorCourses" />
    <result column="ranking" jdbcType="VARCHAR" property="ranking" />
    <result column="honor" jdbcType="VARCHAR" property="honor" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, last_access, resume_id, start_time, end_time, eduation, city, school, major_type, 
    major, major_courses, ranking, honor
  </sql>
  <select id="selectByExample" parameterType="com.yzhh.backstage.api.entity.EducationalBackgroundExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from educational_background
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from educational_background
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from educational_background
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yzhh.backstage.api.entity.EducationalBackgroundExample">
    delete from educational_background
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yzhh.backstage.api.entity.EducationalBackground">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into educational_background (last_access, resume_id, start_time, 
      end_time, eduation, city, 
      school, major_type, major, 
      major_courses, ranking, honor
      )
    values (#{lastAccess,jdbcType=BIGINT}, #{resumeId,jdbcType=BIGINT}, #{startTime,jdbcType=BIGINT}, 
      #{endTime,jdbcType=BIGINT}, #{eduation,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{school,jdbcType=VARCHAR}, #{majorType,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{majorCourses,jdbcType=VARCHAR}, #{ranking,jdbcType=VARCHAR}, #{honor,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yzhh.backstage.api.entity.EducationalBackground">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into educational_background
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        last_access,
      </if>
      <if test="resumeId != null">
        resume_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="eduation != null">
        eduation,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="majorType != null">
        major_type,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="majorCourses != null">
        major_courses,
      </if>
      <if test="ranking != null">
        ranking,
      </if>
      <if test="honor != null">
        honor,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="resumeId != null">
        #{resumeId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=BIGINT},
      </if>
      <if test="eduation != null">
        #{eduation,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="majorType != null">
        #{majorType,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="majorCourses != null">
        #{majorCourses,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=VARCHAR},
      </if>
      <if test="honor != null">
        #{honor,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yzhh.backstage.api.entity.EducationalBackgroundExample" resultType="java.lang.Long">
    select count(*) from educational_background
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update educational_background
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.lastAccess != null">
        last_access = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.resumeId != null">
        resume_id = #{record.resumeId,jdbcType=BIGINT},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=BIGINT},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=BIGINT},
      </if>
      <if test="record.eduation != null">
        eduation = #{record.eduation,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.majorType != null">
        major_type = #{record.majorType,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.majorCourses != null">
        major_courses = #{record.majorCourses,jdbcType=VARCHAR},
      </if>
      <if test="record.ranking != null">
        ranking = #{record.ranking,jdbcType=VARCHAR},
      </if>
      <if test="record.honor != null">
        honor = #{record.honor,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update educational_background
    set id = #{record.id,jdbcType=BIGINT},
      last_access = #{record.lastAccess,jdbcType=BIGINT},
      resume_id = #{record.resumeId,jdbcType=BIGINT},
      start_time = #{record.startTime,jdbcType=BIGINT},
      end_time = #{record.endTime,jdbcType=BIGINT},
      eduation = #{record.eduation,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      major_type = #{record.majorType,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      major_courses = #{record.majorCourses,jdbcType=VARCHAR},
      ranking = #{record.ranking,jdbcType=VARCHAR},
      honor = #{record.honor,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yzhh.backstage.api.entity.EducationalBackground">
    update educational_background
    <set>
      <if test="lastAccess != null">
        last_access = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="resumeId != null">
        resume_id = #{resumeId,jdbcType=BIGINT},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=BIGINT},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=BIGINT},
      </if>
      <if test="eduation != null">
        eduation = #{eduation,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="majorType != null">
        major_type = #{majorType,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="majorCourses != null">
        major_courses = #{majorCourses,jdbcType=VARCHAR},
      </if>
      <if test="ranking != null">
        ranking = #{ranking,jdbcType=VARCHAR},
      </if>
      <if test="honor != null">
        honor = #{honor,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yzhh.backstage.api.entity.EducationalBackground">
    update educational_background
    set last_access = #{lastAccess,jdbcType=BIGINT},
      resume_id = #{resumeId,jdbcType=BIGINT},
      start_time = #{startTime,jdbcType=BIGINT},
      end_time = #{endTime,jdbcType=BIGINT},
      eduation = #{eduation,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      major_type = #{majorType,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      major_courses = #{majorCourses,jdbcType=VARCHAR},
      ranking = #{ranking,jdbcType=VARCHAR},
      honor = #{honor,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>