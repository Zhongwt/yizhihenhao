<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzhh.backstage.api.dao.mapper.InterviewMapper">
  <resultMap id="BaseResultMap" type="com.yzhh.backstage.api.entity.Interview">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="last_access" jdbcType="BIGINT" property="lastAccess" />
    <result column="delivery_resume_id" jdbcType="BIGINT" property="deliveryResumeId" />
    <result column="interview_time" jdbcType="BIGINT" property="interviewTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="subject" jdbcType="VARCHAR" property="subject" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, last_access, delivery_resume_id, interview_time, address, status, contacts, phone, 
    note,subject
  </sql>
  <select id="selectByExample" parameterType="com.yzhh.backstage.api.entity.InterviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from interview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from interview
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from interview
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yzhh.backstage.api.entity.InterviewExample">
    delete from interview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yzhh.backstage.api.entity.Interview">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into interview (last_access, delivery_resume_id, interview_time, 
      address, status, contacts, 
      phone, note,subject)
    values (#{lastAccess,jdbcType=BIGINT}, #{deliveryResumeId,jdbcType=BIGINT}, #{interviewTime,jdbcType=BIGINT}, 
      #{address,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{contacts,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{subject,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yzhh.backstage.api.entity.Interview">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into interview
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        last_access,
      </if>
      <if test="deliveryResumeId != null">
        delivery_resume_id,
      </if>
      <if test="interviewTime != null">
        interview_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="contacts != null">
        contacts,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="subject != null">
        subject,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="deliveryResumeId != null">
        #{deliveryResumeId,jdbcType=BIGINT},
      </if>
      <if test="interviewTime != null">
        #{interviewTime,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="contacts != null">
        #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        #{subject,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yzhh.backstage.api.entity.InterviewExample" resultType="java.lang.Long">
    select count(*) from interview
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update interview
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.lastAccess != null">
        last_access = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.deliveryResumeId != null">
        delivery_resume_id = #{record.deliveryResumeId,jdbcType=BIGINT},
      </if>
      <if test="record.interviewTime != null">
        interview_time = #{record.interviewTime,jdbcType=BIGINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.contacts != null">
        contacts = #{record.contacts,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.subject != null">
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update interview
    set id = #{record.id,jdbcType=BIGINT},
      last_access = #{record.lastAccess,jdbcType=BIGINT},
      delivery_resume_id = #{record.deliveryResumeId,jdbcType=BIGINT},
      interview_time = #{record.interviewTime,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      contacts = #{record.contacts,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      subject = #{record.subject,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yzhh.backstage.api.entity.Interview">
    update interview
    <set>
      <if test="lastAccess != null">
        last_access = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="deliveryResumeId != null">
        delivery_resume_id = #{deliveryResumeId,jdbcType=BIGINT},
      </if>
      <if test="interviewTime != null">
        interview_time = #{interviewTime,jdbcType=BIGINT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="contacts != null">
        contacts = #{contacts,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="subject != null">
        subject = #{subject,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yzhh.backstage.api.entity.Interview">
    update interview
    set last_access = #{lastAccess,jdbcType=BIGINT},
      delivery_resume_id = #{deliveryResumeId,jdbcType=BIGINT},
      interview_time = #{interviewTime,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      contacts = #{contacts,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      subject = #{subject,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>