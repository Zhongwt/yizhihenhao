<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzhh.backstage.api.dao.mapper.CompanyMapper">
  <resultMap id="BaseResultMap" type="com.yzhh.backstage.api.entity.Company">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="last_access" jdbcType="BIGINT" property="lastAccess" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="join_date" jdbcType="BIGINT" property="joinDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="is_number" jdbcType="INTEGER" property="isNumber" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="field" jdbcType="VARCHAR" property="field" />
    <result column="scale" jdbcType="VARCHAR" property="scale" />
    <result column="website" jdbcType="VARCHAR" property="website" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="attachment" jdbcType="VARCHAR" property="attachment" />
    <result column="identification" jdbcType="INTEGER" property="identification" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="company_type" jdbcType="VARCHAR" property="companyType" />
    <result column="registration_number" jdbcType="VARCHAR" property="registrationNumber" />
    <result column="establish_time" jdbcType="VARCHAR" property="establishTime" />
    <result column="registered_capital" jdbcType="VARCHAR" property="registeredCapital" />
    <result column="option_note" jdbcType="VARCHAR" property="optionNote" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, last_access, name, province, city, area, address, join_date, status, is_number, 
    description, field, scale, website, note, email, attachment, identification, phone, 
    password, logo, company_type, registration_number, establish_time, registered_capital,option_note
  </sql>
  <select id="selectByExample" parameterType="com.yzhh.backstage.api.entity.CompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from company
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from company
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yzhh.backstage.api.entity.CompanyExample">
    delete from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yzhh.backstage.api.entity.Company">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company (last_access, name, province, 
      city, area, address, 
      join_date, status, is_number, 
      description, field, scale, 
      website, note, email, 
      attachment, identification, phone, 
      password, logo, company_type, 
      registration_number, establish_time, registered_capital,option_note
      )
    values (#{lastAccess,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{area,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{joinDate,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{isNumber,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{field,jdbcType=VARCHAR}, #{scale,jdbcType=VARCHAR}, 
      #{website,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{attachment,jdbcType=VARCHAR}, #{identification,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{companyType,jdbcType=VARCHAR}, 
      #{registrationNumber,jdbcType=VARCHAR}, #{establishTime,jdbcType=VARCHAR}, #{registeredCapital,jdbcType=VARCHAR},#{optionNote,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yzhh.backstage.api.entity.Company">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        last_access,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="joinDate != null">
        join_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isNumber != null">
        is_number,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="field != null">
        field,
      </if>
      <if test="scale != null">
        scale,
      </if>
      <if test="website != null">
        website,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="attachment != null">
        attachment,
      </if>
      <if test="identification != null">
        identification,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="companyType != null">
        company_type,
      </if>
      <if test="registrationNumber != null">
        registration_number,
      </if>
      <if test="establishTime != null">
        establish_time,
      </if>
      <if test="registeredCapital != null">
        registered_capital,
      </if>
       <if test="optionNote != null">
        option_note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null">
        #{joinDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="isNumber != null">
        #{isNumber,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="field != null">
        #{field,jdbcType=VARCHAR},
      </if>
      <if test="scale != null">
        #{scale,jdbcType=VARCHAR},
      </if>
      <if test="website != null">
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="identification != null">
        #{identification,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null">
        #{companyType,jdbcType=VARCHAR},
      </if>
      <if test="registrationNumber != null">
        #{registrationNumber,jdbcType=VARCHAR},
      </if>
      <if test="establishTime != null">
        #{establishTime,jdbcType=VARCHAR},
      </if>
      <if test="registeredCapital != null">
        #{registeredCapital,jdbcType=VARCHAR},
      </if>
      <if test="optionNote != null">
        #{optionNote,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yzhh.backstage.api.entity.CompanyExample" resultType="java.lang.Long">
    select count(*) from company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update company
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.lastAccess != null">
        last_access = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.area != null">
        area = #{record.area,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.joinDate != null">
        join_date = #{record.joinDate,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.isNumber != null">
        is_number = #{record.isNumber,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.field != null">
        field = #{record.field,jdbcType=VARCHAR},
      </if>
      <if test="record.scale != null">
        scale = #{record.scale,jdbcType=VARCHAR},
      </if>
      <if test="record.website != null">
        website = #{record.website,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null">
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.attachment != null">
        attachment = #{record.attachment,jdbcType=VARCHAR},
      </if>
      <if test="record.identification != null">
        identification = #{record.identification,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null">
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.companyType != null">
        company_type = #{record.companyType,jdbcType=VARCHAR},
      </if>
      <if test="record.registrationNumber != null">
        registration_number = #{record.registrationNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.establishTime != null">
        establish_time = #{record.establishTime,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredCapital != null">
        registered_capital = #{record.registeredCapital,jdbcType=VARCHAR},
      </if>
      <if test="record.optionNote != null">
        option_note = #{record.optionNote,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update company
    set id = #{record.id,jdbcType=BIGINT},
      last_access = #{record.lastAccess,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      area = #{record.area,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      join_date = #{record.joinDate,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      is_number = #{record.isNumber,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      field = #{record.field,jdbcType=VARCHAR},
      scale = #{record.scale,jdbcType=VARCHAR},
      website = #{record.website,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      attachment = #{record.attachment,jdbcType=VARCHAR},
      identification = #{record.identification,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      company_type = #{record.companyType,jdbcType=VARCHAR},
      registration_number = #{record.registrationNumber,jdbcType=VARCHAR},
      establish_time = #{record.establishTime,jdbcType=VARCHAR},
      registered_capital = #{record.registeredCapital,jdbcType=VARCHAR},
      option_note = #{record.optionNote,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yzhh.backstage.api.entity.Company">
    update company
    <set>
      <if test="lastAccess != null">
        last_access = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null">
        join_date = #{joinDate,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="isNumber != null">
        is_number = #{isNumber,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="field != null">
        field = #{field,jdbcType=VARCHAR},
      </if>
      <if test="scale != null">
        scale = #{scale,jdbcType=VARCHAR},
      </if>
      <if test="website != null">
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null">
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="identification != null">
        identification = #{identification,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="companyType != null">
        company_type = #{companyType,jdbcType=VARCHAR},
      </if>
      <if test="registrationNumber != null">
        registration_number = #{registrationNumber,jdbcType=VARCHAR},
      </if>
      <if test="establishTime != null">
        establish_time = #{establishTime,jdbcType=VARCHAR},
      </if>
      <if test="registeredCapital != null">
        registered_capital = #{registeredCapital,jdbcType=VARCHAR},
      </if>
      <if test="optionNote != null">
        option_note = #{optionNote,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yzhh.backstage.api.entity.Company">
    update company
    set last_access = #{lastAccess,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      join_date = #{joinDate,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      is_number = #{isNumber,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      field = #{field,jdbcType=VARCHAR},
      scale = #{scale,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR},
      identification = #{identification,jdbcType=INTEGER},
      phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      company_type = #{companyType,jdbcType=VARCHAR},
      registration_number = #{registrationNumber,jdbcType=VARCHAR},
      establish_time = #{establishTime,jdbcType=VARCHAR},
      registered_capital = #{registeredCapital,jdbcType=VARCHAR},
      option_note = #{optionNote,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>