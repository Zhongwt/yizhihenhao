<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yzhh.backstage.api.dao.mapper.AdminMapper">
  <resultMap id="BaseResultMap" type="com.yzhh.backstage.api.entity.Admin">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="last_access" jdbcType="BIGINT" property="lastAccess" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="join_date" jdbcType="BIGINT" property="joinDate" />
    <result column="last_login_date" jdbcType="BIGINT" property="lastLoginDate" />
    <result column="role" jdbcType="INTEGER" property="role" />
    <result column="jurisdiction" jdbcType="VARCHAR" property="jurisdiction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, last_access, username, name,password, email, join_date, last_login_date, role, jurisdiction
  </sql>
  <select id="selectByExample" parameterType="com.yzhh.backstage.api.entity.AdminExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from admin
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from admin
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yzhh.backstage.api.entity.AdminExample">
    delete from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yzhh.backstage.api.entity.Admin">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into admin (last_access, username, name,password, 
      email, join_date, last_login_date, 
      role, jurisdiction)
    values (#{lastAccess,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{joinDate,jdbcType=BIGINT}, #{lastLoginDate,jdbcType=BIGINT}, 
      #{role,jdbcType=INTEGER}, #{jurisdiction,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yzhh.backstage.api.entity.Admin">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into admin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        last_access,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="joinDate != null">
        join_date,
      </if>
      <if test="lastLoginDate != null">
        last_login_date,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="jurisdiction != null">
        jurisdiction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="lastAccess != null">
        #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null">
        #{joinDate,jdbcType=BIGINT},
      </if>
      <if test="lastLoginDate != null">
        #{lastLoginDate,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="jurisdiction != null">
        #{jurisdiction,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yzhh.backstage.api.entity.AdminExample" resultType="java.lang.Long">
    select count(*) from admin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update admin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.lastAccess != null">
        last_access = #{record.lastAccess,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.joinDate != null">
        join_date = #{record.joinDate,jdbcType=BIGINT},
      </if>
      <if test="record.lastLoginDate != null">
        last_login_date = #{record.lastLoginDate,jdbcType=BIGINT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=INTEGER},
      </if>
      <if test="record.jurisdiction != null">
        jurisdiction = #{record.jurisdiction,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update admin
    set id = #{record.id,jdbcType=BIGINT},
      last_access = #{record.lastAccess,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
       name = #{record.name,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      join_date = #{record.joinDate,jdbcType=BIGINT},
      last_login_date = #{record.lastLoginDate,jdbcType=BIGINT},
      role = #{record.role,jdbcType=INTEGER},
      jurisdiction = #{record.jurisdiction,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yzhh.backstage.api.entity.Admin">
    update admin
    <set>
      <if test="lastAccess != null">
        last_access = #{lastAccess,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="joinDate != null">
        join_date = #{joinDate,jdbcType=BIGINT},
      </if>
      <if test="lastLoginDate != null">
        last_login_date = #{lastLoginDate,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="jurisdiction != null">
        jurisdiction = #{jurisdiction,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yzhh.backstage.api.entity.Admin">
    update admin
    set last_access = #{lastAccess,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      join_date = #{joinDate,jdbcType=BIGINT},
      last_login_date = #{lastLoginDate,jdbcType=BIGINT},
      role = #{role,jdbcType=INTEGER},
      jurisdiction = #{jurisdiction,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>